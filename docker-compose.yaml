version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
    container_name: elasticsearch
    environment:
      xpack.security.enabled: "false"
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms512m -Xmx512m
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data
  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.0
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
  meta-creator-service:
    build:
      context: .
      dockerfile: ./docker_files/meta_creator.Dockerfile
    image: meta-creator-service:v1.0
    ports:
      - "3000:3000"
    environment:
      DATA_DIR: /mnt/data
    volumes:
      - ${DATA_DIR}:/mnt/data:ro
    depends_on:
      - kafka
  data-indexer-service:
    build:
      context: .
      dockerfile: ./docker_files/data_indexer.Dockerfile
    image: data-indexer-service:v1.0
    ports:
      - "3001:3001"
    environment:
      DATA_DIR: /mnt/data
    volumes:
      - ${DATA_DIR}:/mnt/data:ro
    depends_on:
      - kafka
      - mongodb
      - elasticsearch
      - meta-creator-service
  stt-service:
    build:
      context: .
      dockerfile: ./docker_files/stt_service.Dockerfile
    image: stt-service:v1.0
    ports:
      - "3002:3002"
    depends_on:
      - mongodb
      - elasticsearch
      - data-indexer-service
  bds-service:
    build:
      context: .
      dockerfile: ./docker_files/bds_service.Dockerfile
    image: bds-service:v1.0
    ports:
      - "3003:3003"
    depends_on:
      - elasticsearch
      - stt-service
volumes:
  esdata:

  
  
